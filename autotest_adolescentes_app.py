# -*- coding: utf-8 -*-
"""Copia de AUTOTEST ADOLESCENTES VERSION FINAL.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ayS70KpeZ2NRHPo-825xYRm2-FQCEx-E
"""

import streamlit as st
import matplotlib.pyplot as plt

st.set_page_config(page_title="Autotest Alimentario Adolescente", layout="centered")

st.title("🍎 Autotest para Adolescentes sobre Hábitos Alimenticios")
st.write("Este test te ayuda a conocer mejor tu alimentación.")
st.info("⚠️ No es un examen. Respondé sinceramente según tus hábitos en el último mes.")

# Diccionarios de preguntas
frecuencia_preguntas = {
    "Desayunás": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Almorzás": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Merendás": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Cenás": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Leche, yogur o quesos": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Carnes (vaca, pollo, cerdo, pescado, etc.)": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Verduras": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Frutas": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Pastas, arroz, etc.": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Pan, galletitas": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"],
    "Aceites (con verduras, en purés, etc.)": ["Ocasionalmente (2 o menos días)", "A veces (3 a 4 días)", "Casi siempre (5 a 7 días)"]
}
frecuencia_valores = {"Ocasionalmente (2 o menos días)": 0, "A veces (3 a 4 días)": 2, "Casi siempre (5 a 7 días)": 5}

frecuencia_inversa_preguntas = {
    "Snacks (papas fritas, chizitos)": 10,
    "Golosinas (caramelos, chocolates)": 5,
    "Gaseosas o jugos artificiales": 5
}
frecuencia_inversa_valores = {"Ocasionalmente (2 o menos días)": 10, "A veces (3 a 4 días)": 1, "Casi siempre (5 a 7 días)": 0}

sino_preguntas = {
    "¿Tomás agua durante el día?": 10,
    "¿Agregás sal sin probar antes?": 10,
    "¿Consumís más de 2 vasos de alcohol por día?": 10,
    "¿Hacés actividad física 3 veces por semana?": 10
}
sino_valores = {"SI": 10, "NO": 0}

# Recolección de respuestas
total_score = 0
freq_normal = 0
freq_inverse = 0
sino_total = 0

st.subheader("🧪 Preguntas de frecuencia semanal")
for pregunta, opciones in frecuencia_preguntas.items():
    respuesta = st.selectbox(pregunta, opciones, key=pregunta)
    puntaje = frecuencia_valores[respuesta]
    freq_normal += puntaje
    total_score += puntaje

st.subheader("🥤 Snacks, golosinas y bebidas azucaradas")
for pregunta, max_puntos in frecuencia_inversa_preguntas.items():
    respuesta = st.selectbox(pregunta, list(frecuencia_inversa_valores.keys()), key=pregunta)
    puntaje = frecuencia_inversa_valores[respuesta]
    freq_inverse += puntaje
    total_score += puntaje

st.subheader("✅ Preguntas Sí / No")
for pregunta, max_puntos in sino_preguntas.items():
    respuesta = st.radio(pregunta, ["SI", "NO"], key=pregunta)
    if "sal" in pregunta or "alcohol" in pregunta:
        puntaje = 10 if respuesta == "NO" else 0
    else:
        puntaje = 10 if respuesta == "SI" else 0
    sino_total += puntaje
    total_score += puntaje

# Resultado final
st.markdown("---")
st.subheader("📊 Resultado del Autotest")

if total_score >= 82:
    clasificacion = "🥇 Alimentación Muy Buena"
    descripcion = "Tenés una alimentación muy buena, ¡seguí así!"
elif 52 <= total_score <= 81:
    clasificacion = "🥈 Alimentación Buena"
    descripcion = "Tu alimentación es buena, pero puede mejorar."
elif 34 <= total_score <= 51:
    clasificacion = "🥉 Alimentación Regular"
    descripcion = "Tu alimentación es regular. Sería bueno mejorarla."
else:
    clasificacion = "⚠️ Necesitás mejorar tu alimentación"
    descripcion = "Sería importante revisar tus hábitos con un/a nutricionista."

st.success(f"**Tu clasificación es:** {clasificacion}")
st.write(f"**Descripción:** {descripcion}")
st.write(f"**Puntaje total:** {total_score}")

# Gráfico de barras tipo semáforo
st.subheader("📈 Gráfico de tus resultados por categoría")

categorias = ["Comidas Frecuentes", "Snacks/Bebidas", "Hábitos Generales"]
puntajes = [freq_normal, freq_inverse, sino_total]

colores = []
minimo = min(puntajes)
maximo = max(puntajes)

for p in puntajes:
    if p == minimo:
        colores.append("red")
    elif p == maximo:
        colores.append("green")
    else:
        colores.append("gold")

fig, ax = plt.subplots()
bars = ax.bar(categorias, puntajes, color=colores)
ax.set_ylabel("Puntaje")
ax.set_ylim(0, max(puntajes) + 10)
ax.set_title("Desglose de Puntaje por Categoría")

# Mostrar valores sobre cada barra
for bar in bars:
    yval = bar.get_height()
    ax.text(bar.get_x() + bar.get_width()/2, yval + 1, str(yval), ha='center', va='bottom')

st.pyplot(fig)

st.markdown("---")
st.info("🧠 Recomendación: Consultá siempre a un profesional de la salud para orientación personalizada.")